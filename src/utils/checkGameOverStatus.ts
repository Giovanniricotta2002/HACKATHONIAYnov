import type { Scores } from "@/types/gameTypes";

/**
 * V√©rifie si une condition de fin de partie est atteinte.
 * @param scores - Les scores actuels du joueur.
 * @returns Un message de fin ou `null` si la partie continue.
 */
export function checkGameOverStatus(scores: Scores): string | null {
  // Pollution critique
  if (scores.pollution >= 90) {
    return "‚ò£Ô∏è Le niveau de pollution est devenu insoutenable pour la population.";
  }

  // Si tous les scores sont √©lev√©s ‚Üí victoire
  const scoreValues = Object.values(scores);
  if (scoreValues.every(score => score >= 90)) {
    return "üéâ Bravo, vous avez sauv√© la plan√®te !";
  }

  // Autres scores trop faibles ‚Üí d√©faite
  const criticalLoss = Object.entries(scores).some(([key, value]) => {
    if (key === 'pollution') return false; // g√©r√© s√©par√©ment
    return value <= 10;
  });

  if (criticalLoss) {
    return "‚ö†Ô∏è Votre gestion a men√© √† une catastrophe √©cologique...";
  }

  return null; // Partie continue
}